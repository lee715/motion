// Generated by CoffeeScript 1.6.3
(function() {
  require(['jquery', 'util', 'cssHandler', 'track'], function($, U, C, T) {
    var getTrack;
    getTrack = function(track, opts) {
      var ctor;
      if (typeof track === 'string') {

      } else if ($.isArray(track)) {
        if ($.isArray(track[0])) {
          ctor = T.mix(track, opts);
          track = new ctor(opts);
        } else {
          opts = $.extend({}, opts, track[1]);
          ctor = T.map.get(track[0]);
          track = new ctor(opts);
        }
      }
      return track;
    };
    $.fn.motion = function(css, track, callback, opts) {
      opts = opts || {};
      track = getTrack(track, opts);
      return $(this).each(function(ind, dom) {
        var handler, step, t, timer;
        if ($.isFunction(css)) {
          step = css;
        } else {
          handler = C.handle(css, $(dom));
          step = handler.step;
        }
        t = 0;
        return timer = setInterval(function() {
          var p;
          p = track.getSp(t);
          if (t && !track.getY(t) && track.opts.type === 'stop') {
            clearInterval(timer);
            $(dom).animating = false;
            return callback();
          }
          step(p, track, t);
          if (typeof opts.step === "function") {
            opts.step(p);
          }
          return t = U.beAccuracy(t + 0.04, 2);
        }, 40);
      });
    };
    return $.fn.move = function(track, callback, opts) {
      opts = opts || {};
      track = getTrack(track, opts);
      return $(this).each(function(ind, dom) {
        var o, step, stop, t, timer;
        o = $(dom).offset();
        step = function(x, y) {
          return $(dom).css({
            left: o.left + x + 'px',
            top: o.top + y + 'px'
          });
        };
        stop = opts.stop;
        t = 0;
        return timer = setInterval(function() {
          var x, y;
          x = track.getX(t);
          y = track.getY(t);
          if (stop(x, y, t)) {
            clearInterval(timer);
            $(dom).animating = false;
            return callback();
          }
          step(x, y, track);
          if (typeof opts.step === "function") {
            opts.step(x, y, track);
          }
          return t = U.beAccuracy(t + 0.04, 2);
        }, 40);
      });
    };
  });

}).call(this);
