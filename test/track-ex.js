// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'util', 'track'], function($, U, T) {
    var Cam, FreeFall, Vam;
    Vam = (function(_super) {
      __extends(Vam, _super);

      function Vam(opts) {
        var s, t, v0, vt;
        v0 = opts.v0;
        vt = opts.vt;
        t = opts.t;
        s = opts.s;
        opts.a = (vt - v0) / (t * t);
        opts.b = v0;
        Vam.__super__.constructor.apply(this, arguments);
        this;
      }

      return Vam;

    })(T.get('Parabola'));
    Cam = (function(_super) {
      __extends(Cam, _super);

      function Cam(opts) {
        opts.a = (opts.vt - opts.v0) / opts.t;
        opts.b = opts.v0;
        Cam.__super__.constructor.apply(this, arguments);
        this;
      }

      return Cam;

    })(T.get('Line'));
    T.push({
      'vam': Vam,
      'cam': Cam
    }, 'Physics');
    FreeFall = (function(_super) {
      __extends(FreeFall, _super);

      function FreeFall(opts) {
        this.opts = opts || {};
        FreeFall.__super__.constructor.apply(this, arguments);
        this.v0 = opts.v0;
        this.a = 5;
        this.b = 0;
        this.c = 0;
        this._derec = 0;
        this.opts.type = 'decay';
        this.ym = opts.ym;
        this.times = 1;
        if (opts.times) {
          this.ym /= opts.times;
          this.times = opts.times;
        }
        this._t = U.beAccuracy(Math.sqrt(this.ym / 5), 2);
        this._sumT = 0;
      }

      FreeFall.prototype.isOnEnd = function(x) {
        if (this._sumT) {
          return x > this._sumT;
        } else {
          return x > this._t;
        }
      };

      FreeFall.prototype._check = function(x, method) {
        var p, vt, _ref;
        switch (this.opts.type) {
          case 'decay':
            if (this._t < 0.01) {
              return this.ym * this.times;
            }
            p = ((_ref = this.opts.data) != null ? _ref.decay : void 0) || 0.8;
            x -= this._sumT;
            if (x > this._t) {
              this._derec = ++this._derec % 2;
              this._sumT += this._t;
              x -= this._t;
              if (this._derec) {
                vt = 10 * this._t * p;
                this.a = 5;
                this.b = -vt;
                this.c = this.ym;
                this._t = vt / 10;
                this.yn = vt * vt / 20;
              } else {
                this.b = 0;
                this.a = 5;
                this.c = this.ym - this.yn;
              }
            }
            return this[method](x);
        }
        return FreeFall.__super__._check.apply(this, arguments);
      };

      FreeFall.prototype._getY = function(x) {
        return (this.a * x * x + this.b * x + this.c) * this.times;
      };

      FreeFall.prototype.getX = function(x) {
        return (this.v0 * x) * this.times;
      };

      return FreeFall;

    })(T.get('Image'));
    return T.push('freeFall', FreeFall);
  });

}).call(this);
